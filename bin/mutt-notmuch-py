#!/usr/bin/env python3
"""
Interactively ask for a search query and then symlink the matching messages to
given path.

(c) 2012 - Honza Pokorny
Licensed under BSD
"""

import hashlib
import mailbox
import subprocess
import sys
from pathlib import Path


def digest(path):
    with path.open("rb") as f:
        return hashlib.sha1(f.read()).hexdigest()


def main(dest_box):
    query = input("Query: ")

    # set up directories
    (dest_box / "cur").mkdir(exist_ok=True)
    (dest_box / "new").mkdir(exist_ok=True)
    mailbox.Maildir(dest_box).clear()

    output = subprocess.check_output(
        [
            "notmuch",
            "search",
            "--output=files",
            query,
        ]
    ).decode()
    paths = [Path(f) for f in output.split("\n") if f]

    # ensure all paths notmuch finds exist
    paths = [p for p in paths if p.exists()]

    # unique messages by content
    paths_by_sha = {digest(path): path for path in paths}

    # symlink message files into search mailbox
    for m in paths_by_sha.values():
        target = dest_box / "cur" / m.name
        if not target.exists():
            target.symlink_to(m)


if __name__ == "__main__":
    if len(sys.argv) < 2:
        sys.exit("Missing search directory argument")

    dest = Path(sys.argv[1])

    main(dest)
