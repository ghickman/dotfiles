#!/bin/bash

function pipi {
    pip wheel "$@"
    pip install "$@"
}

function run_at_repo_top_level {
    git_root=$(/usr/local/bin/git rev-parse --show-toplevel 2>/dev/null) && path="$git_root/"
    path="$path$1"

    if [ ! -f "$path" ]; then
        echo "Can't find: $path"
        return
    fi

    pipi -r $path
}

function pipr {
    run_at_repo_top_level "requirements.txt"
}

function pipd {
    run_at_repo_top_level "dev-requirements.txt"
}

function man() {
    open dash://man:$1
}

function take() {
    mkdir -p "$1"
    cd "$1"
}

function vc() {
    if git modified; then
        mvim `git modified`;
    else
        echo "(nothing changed)"
    fi
}

function fae() {
    mvim `ag --nocolor -l "$1"`
}

function ipnt() {
    mktmpenv && pip install ipython[notebook] && ipython notebook
}

function mkmc() {
    if [ -z "$1" ]; then
        echo "Please specify a directory." >&2
        return 1
    fi

    mkdir -p "$1/management/commands"
    touch "$1/management/__init__.py"
    touch "$1/management/commands/__init__.py"
}

function p() {
    cd $(find ~/Projects -maxdepth 1 -type d | selecta)
}

function y() {
    cd $(find ~/Projects/yesgraph -maxdepth 1 -type d | selecta)
}

function build-keyboard() {
    cd ~/Projects/tmk_keyboard/keyboard/ergodox
    PATH=/usr/local/CrossPack-AVR/bin:$PATH
    make -f Makefile.lufa clean
    make -f Makefile.lufa norman
    mv ergodox_lufa.hex INSTALL_THIS.hex
}
