[core]
    editor = vim
    excludesfile = ~/.gitignore
    whitespace = trailing-space

[user]
    name = George Hickman
    email = george@ghickman.co.uk

[alias]
    ap = add -p
    c = commit
    cv = commit -v
    cav = commit -av
    d = diff
    dc = diff --cached
    l50 = "!git log --abbrev-commit --date=short --pretty=format:'%x00%h%x00%cd%x00%s%x00%an%x00%d' | gawk -F '\\0' '{ printf \"%s\\033[31m%s\\033[0m \\033[32m%s\\033[0m  %-50s \\033[30;1m%s\\033[0m\\033[33m%s\\n\", $1, $2, $3, gensub(/(.{49}).{2,}/, \"\\\\1…\",\"g\",$4), $5, $6 }' | less -R"
    l80 = "!git log --abbrev-commit --date=short --pretty=format:'%x00%h%x00%cd%x00%s%x00%an%x00%d' | gawk -F '\\0' '{ printf \"%s\\033[31m%s\\033[0m \\033[32m%s\\033[0m  %-80s \\033[30;1m%s\\033[0m\\033[33m%s\\n\", $1, $2, $3, gensub(/(.{79}).{2,}/, \"\\\\1…\",\"g\",$4), $5, $6 }' | less -R"
    lg50 = "!git log --graph --color=always --abbrev-commit --date=relative --pretty=format:'%x00%h%x00%s%x00%cd%x00%an%x00%d' | gawk -F '\\0' '{ printf \"%s\\033[31m%s\\033[0m %-50s \\033[32m%14s\\033[0m \\033[30;1m%s\\033[0m\\033[33m%s\\n\", $1, $2, gensub(/(.{49}).{2,}/, \"\\\\1…\",\"g\",$3), $4, $5, $6 }' | less -R"
    lg80 = "!git log --graph --color=always --abbrev-commit --date=relative --pretty=format:'%x00%h%x00%s%x00%cd%x00%an%x00%d' | gawk -F '\\0' '{ printf \"%s\\033[31m%s\\033[0m %-80s \\033[32m%14s\\033[0m \\033[30;1m%s\\033[0m\\033[33m%s\\n\", $1, $2, gensub(/(.{79}).{2,}/, \"\\\\1…\",\"g\",$3), $4, $5, $6 }' | less -R"
    ld = log ORIG_HEAD.. --stat --no-merges
    lg = log --graph --pretty=format:'%Cred%h%Creset -%C(yellow)%d%Creset %s %Cgreen(%cr) %C(bold blue)<%an>%Creset' --abbrev-commit
    logo = log --oneline
    mnff = merge --no-ff
    pl = log --decorate --stat --graph --pretty=format:'%C(yellow)%h%Creset (%ar - %Cred%an%Creset), %s%n'`
    s = status
    ctags = "!.git/hooks/ctags"
    prune = remote prune origin
    select = "!git branch --all --remotes | cut -c 3- | rev | cut -d "/" -f 1 | rev | selecta | xargs git checkout"
    push-start = "!git push --set-upstream origin `git rev-parse --abbrev-ref HEAD`"

[branch]
    autosetuprebase = always

[color]
    branch = auto
    diff = auto
    status = auto

[color "branch"]
    current = yellow reverse
    local = yellow

[color "diff"]
    meta = yellow
    frag = magenta bold
    old = red bold
    new = green

[color "status"]
    untracked = cyan

[help]
    autocorrect = 1

[merge]
    conflictstyle = diff3
    tool = splice

[mergetool "splice"]
    cmd = "mvim -f $BASE $LOCAL $REMOTE $MERGED -c 'SpliceInit'"
    trustExitCode = true

[push]
    default = upstream

[rerere]
    enabled = 1

[status]
    relativePaths = true

[achievement]
  upload = true

[gist]
    private = yes

[github]
    user = ghickman

[include]
    path = .heroku/accounts/config
    path = .ghi

[init]
    templatedir = ~/.git_template

[heroku]
    account = me
